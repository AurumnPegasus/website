<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>math on Shivansh Subramanian</title>
    <link>https://aurumnpegasus.github.io/website/tags/math/</link>
    <description>Recent content in math on Shivansh Subramanian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 07 Nov 2021 12:35:02 +0530</lastBuildDate>
    
	<atom:link href="https://aurumnpegasus.github.io/website/tags/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fast Multiplication</title>
      <link>https://aurumnpegasus.github.io/website/posts/fast_multiplication/</link>
      <pubDate>Sun, 07 Nov 2021 12:35:02 +0530</pubDate>
      
      <guid>https://aurumnpegasus.github.io/website/posts/fast_multiplication/</guid>
      <description>Multiplication, generally, is relatively easy to do, understand and code. Even the 2nd standard algorithm of multiple each digit with every other digit is simple enough to write. The issue is that such an algorithm takes O(n^2) time complexity, which is a lot, especially if you want to multiply huge numbers. Hence why you need better algorithms in place to do your job. Note, languages like Python have lots of optimisations on top of specific algorithms used for computing products when the user types in a simple &amp;lsquo;*&#39;, but the article is more about understanding these algorithms.</description>
    </item>
    
    <item>
      <title>Arranging Coins</title>
      <link>https://aurumnpegasus.github.io/website/posts/leetcode_441/</link>
      <pubDate>Fri, 05 Nov 2021 08:31:41 +0530</pubDate>
      
      <guid>https://aurumnpegasus.github.io/website/posts/leetcode_441/</guid>
      <description>So this is probably the simplest weekly question out there if you know the math required. I will just write down my thoughts so I know how I approached the problem later on, and not what the solution is per se.
Problem: Link: https://leetcode.com/problems/arranging-coins/
Statement: You have n coins, and you want to build a staircase with these coins. The staircase consists of k rows, where ith row has exactly i coins.</description>
    </item>
    
    <item>
      <title>Reduced Row Echelon Form</title>
      <link>https://aurumnpegasus.github.io/website/posts/rref/</link>
      <pubDate>Wed, 13 Oct 2021 12:00:06 +0900</pubDate>
      
      <guid>https://aurumnpegasus.github.io/website/posts/rref/</guid>
      <description>&lt;p&gt;The blog explains how to find reduced row-echelon form of a matrix in python&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>